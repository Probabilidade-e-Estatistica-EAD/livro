gg   <- data.frame(X,Y)
esq <- ggplot(data = gg, mapping = aes(x = X, y = Y)) +
geom_path() +
geom_linerange(data = gg[gg$X < 1300,], aes(X, ymin = 0, ymax = Y), colour="#EAB217") +
labs(x = NULL, y = NULL) +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(),
axis.line.y = element_blank(), axis.text.x = element_blank()) +
geom_vline(xintercept = m, linetype = "dashed", color = "lightyellow4") +
geom_hline(yintercept = 0) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
dir <- ggplot(data = gg, mapping = aes(x = X, y = Y)) +
geom_path() +
geom_linerange(data = gg[gg$X > 1700,], aes(X, ymin = 0, ymax = Y), colour="#EAB217") +
labs(x = NULL, y = NULL) +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(),
axis.line.y = element_blank(), axis.text.x = element_blank()) +
geom_vline(xintercept = m, linetype = "dashed", color = "lightyellow4") +
geom_hline(yintercept = 0) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
require(grid)
grid.arrange(esq, dir, ncol = 2,
top = textGrob("Z negativo vs. Z positivo", gp = gpar(fontsize = 27,font = 8)))
esq <- ggplot(data = gg, mapping = aes(x = X, y = Y)) +
geom_linerange(data = gg[gg$X < 1300,], aes(X, ymin = 0, ymax = Y), colour="#EAB217") +
geom_path() +
labs(x = NULL, y = NULL) +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(),
axis.line.y = element_blank(), axis.text.x = element_blank()) +
geom_vline(xintercept = m, linetype = "dashed", color = "lightyellow4") +
geom_hline(yintercept = 0) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
dir <- ggplot(data = gg, mapping = aes(x = X, y = Y)) +
geom_linerange(data = gg[gg$X > 1700,], aes(X, ymin = 0, ymax = Y), colour="#EAB217") +
geom_path() +
labs(x = NULL, y = NULL) +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(),
axis.line.y = element_blank(), axis.text.x = element_blank()) +
geom_vline(xintercept = m, linetype = "dashed", color = "lightyellow4") +
geom_hline(yintercept = 0) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
grid.arrange(esq, dir, ncol = 2,
top = textGrob("Z negativo vs. Z positivo", gp = gpar(fontsize = 27,font = 8)))
esq <- ggplot(data = gg, mapping = aes(x = X, y = Y)) +
geom_linerange(data = gg[gg$X < 1300,], aes(X, ymin = 0, ymax = Y), colour="#EAB217") +
geom_path(size = 1) +
labs(x = NULL, y = NULL) +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(),
axis.line.y = element_blank(), axis.text.x = element_blank()) +
geom_vline(xintercept = m, linetype = "dashed", color = "lightyellow4") +
geom_hline(yintercept = 0) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
dir <- ggplot(data = gg, mapping = aes(x = X, y = Y)) +
geom_linerange(data = gg[gg$X > 1700,], aes(X, ymin = 0, ymax = Y), colour="#EAB217") +
geom_path(size = 1) +
labs(x = NULL, y = NULL) +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(),
axis.line.y = element_blank(), axis.text.x = element_blank()) +
geom_vline(xintercept = m, linetype = "dashed", color = "lightyellow4") +
geom_hline(yintercept = 0) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
grid.arrange(esq, dir, ncol = 2,
top = textGrob("Z negativo vs. Z positivo", gp = gpar(fontsize = 27,font = 8)))
ggplot(data = gg, mapping = aes(x = X, y = Y)) +
geom_linerange(data = gg[gg$X > 1630,], aes(X, ymin = 0, ymax = Y), colour="#E97C31") +
geom_path(size = 1) +
scale_x_continuous(breaks = seq(m - 3*s, m + 3*s, s)) +
labs(x = NULL, y = NULL) +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(),
axis.line.y = element_blank()) +
geom_vline(xintercept = m + 130, linetype = "dashed") +
geom_hline(yintercept = 0) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
all <- ggplot(data = gg, mapping = aes(x = X, y = Y)) +
geom_linerange(data = gg[gg$X < 2700,], aes(X, ymin = 0, ymax = Y), colour="#EAB217") +
geom_path(size = 1) +
labs(x = NULL, y = NULL) +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(),
axis.line.y = element_blank(), axis.text.x = element_blank()) +
# geom_vline(xintercept = m + 130, linetype = "dashed", color = "gold4") +
geom_hline(yintercept = 0) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
esquerda <- ggplot(data = gg, mapping = aes(x = X, y = Y)) +
geom_linerange(data = gg[gg$X < 1630,], aes(X, ymin = 0, ymax = Y), colour="#EAB217") +
geom_path(size = 1) +
labs(x = NULL, y = NULL) +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(),
axis.line.y = element_blank(), axis.text.x = element_blank()) +
geom_vline(xintercept = m + 130, linetype = "dashed", color = "gold4") +
geom_hline(yintercept = 0) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
direita <- ggplot(data = gg, mapping = aes(x = X, y = Y)) +
geom_linerange(data = gg[gg$X > 1630,], aes(X, ymin = 0, ymax = Y), colour="#EAB217") +
geom_path(size = 1) +
labs(x = NULL, y = NULL) +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(),
axis.line.y = element_blank(), axis.text.x = element_blank()) +
geom_vline(xintercept = m + 130, linetype = "dashed", color = "gold4") +
geom_hline(yintercept = 0) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
require(grid)
grid.arrange(all, esquerda, direita, ncol = 3,
top = textGrob("1.0000 - 0.6664 = 0.3336", gp = gpar(fontsize = 27,font = 8)))
grid.arrange(all, esquerda, direita, ncol = 3,
top = textGrob("1.0000      - 0.6664 = 0.3336", gp = gpar(fontsize = 27,font = 8)))
grid.arrange(all, esquerda, direita, ncol = 3,
top = textGrob("1.0000   -   0.6664 = 0.3336", gp = gpar(fontsize = 27,font = 8)))
grid.arrange(all, esquerda, direita, ncol = 3,
top = textGrob(" 1.0000  -  0.6664 = 0.3336", gp = gpar(fontsize = 27,font = 8)))
grid.arrange(all, esquerda, direita, ncol = 3,
top = textGrob("   1.0000    -    0.6664   =   0.3336",
gp = gpar(fontsize = 27,font = 8)))
ggplot(data = gg, mapping = aes(x = X, y = Y)) +
geom_path() +
geom_linerange(data = gg[gg$X < 1400,], aes(X, ymin = 0, ymax = Y), colour="#E97C31") +
labs(x = NULL, y = NULL) +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(),
axis.line.y = element_blank()) +
geom_vline(xintercept = m - 100, linetype = "dashed") +
geom_hline(yintercept = 0) +
scale_x_continuous(breaks = seq(m - 3*s, m + 3*s, s)) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
ggplot(data = gg, mapping = aes(x = X, y = Y)) +
geom_linerange(data = gg[gg$X < 1400,], aes(X, ymin = 0, ymax = Y), colour="#E97C31") +
geom_path(size = 1) +
labs(x = NULL, y = NULL) +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(),
axis.line.y = element_blank()) +
geom_vline(xintercept = m - 100, linetype = "dashed") +
geom_hline(yintercept = 0) +
scale_x_continuous(breaks = seq(m - 3*s, m + 3*s, s)) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
ggplot(data = gg, mapping = aes(x = X, y = Y)) +
geom_linerange(data = gg[gg$X > 1400,], aes(X, ymin = 0, ymax = Y), colour="#E97C31") +
geom_path(size = 1) +
labs(x = NULL, y = NULL) +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(),
axis.line.y = element_blank()) +
geom_vline(xintercept = m - 100, linetype = "dashed") +
geom_hline(yintercept = 0) +
scale_x_continuous(breaks = seq(m - 3*s, m + 3*s, s)) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
set.seed(1)
m <- 178
s <- 8.38
X <- m + s * seq(-4, 4, 0.01)
Y <- dnorm(X, m, s)
gg   <- data.frame(X,Y)
ggplot(data = gg, mapping = aes(x = X, y = Y)) +
geom_linerange(data = gg[gg$X < qnorm(p = 0.40, mean = m, sd = s),],
aes(X, ymin = 0, ymax = Y), colour="#E6205F") +
geom_path(size = 1) +
labs(x = NULL, y = NULL) +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(),
axis.line.y = element_blank()) +
geom_vline(xintercept = qnorm(p = 0.40, mean = m, sd = s),
linetype = "dashed") +
geom_hline(yintercept = 0) +
annotate("text", x = m - 2*s,
y = Y[which(grepl(m - s, X))], label = "0.40 (40%)") +
scale_x_continuous(breaks = seq(m - 3*s, m + 3*s, s*1.5))+
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
gg   <- data.frame(X,Y)
ggplot(data = gg, mapping = aes(x = X, y = Y)) +
geom_linerange(data = gg[gg$X < qnorm(p = 0.82, mean = m, sd = s),],
aes(X, ymin = 0, ymax = Y), colour="#E6205F") +
geom_path(size = 1) +
labs(x = NULL, y = NULL) +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(),
axis.line.y = element_blank()) +
geom_vline(xintercept = qnorm(p = 0.82, mean = m, sd = s),
linetype = "dashed") +
geom_hline(yintercept = 0) +
annotate("text", x = m - 2*s,
y = Y[which(grepl(m - s, X))], label = "0.82 (82%)") +
annotate("text", x = m + 2*s,
y = Y[which(grepl(m - s, X))], label = "0.18 (18%)") +
scale_x_continuous(breaks = seq(m - 3*s, m + 3*s, s*1.5)) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
ggplot(data = gg, mapping = aes(x = X, y = Y)) +
geom_linerange(data = gg[gg$X > 175 & gg$X < 188, ],
aes(X, ymin = 0, ymax = Y), colour="#E97C31") +
labs(x = NULL, y = NULL) +
geom_path(size = 1) +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(),
axis.line.y = element_blank()) +
geom_vline(xintercept = c(175, 188),
linetype = "dashed") +
geom_hline(yintercept = 0) +
scale_x_continuous(breaks = seq(m - 3*s, m + 3*s, s*1.5)) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
inicio <- ggplot(data = gg, mapping = aes(x = X, y = Y)) +
geom_linerange(data = gg[gg$X > 144, ],
aes(X, ymin = 0, ymax = Y), colour="#E6205F") +
labs(x = NULL, y = NULL) +
geom_path(size = 1) +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(),
axis.line.y = element_blank(), axis.text.x = element_blank()) +
geom_hline(yintercept = 0) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
p175 <- ggplot(data = gg, mapping = aes(x = X, y = Y)) +
geom_linerange(data = gg[gg$X < 175, ],
aes(X, ymin = 0, ymax = Y), colour="#E6205F") +
labs(x = NULL, y = NULL) +
geom_path(size = 1) +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(),
axis.line.y = element_blank(), axis.text.x = element_blank()) +
geom_vline(xintercept = 175,
linetype = "dashed") +
geom_hline(yintercept = 0) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
p188 <- ggplot(data = gg, mapping = aes(x = X, y = Y)) +
geom_linerange(data = gg[gg$X > 188, ],
aes(X, ymin = 0, ymax = Y), colour="#E6205F") +
labs(x = NULL, y = NULL) +
geom_path(size = 1) +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(),
axis.line.y = element_blank(), axis.text.x = element_blank()) +
geom_vline(xintercept = 188,
linetype = "dashed") +
geom_hline(yintercept = 0) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
final <- ggplot(data = gg, mapping = aes(x = X, y = Y)) +
geom_linerange(data = gg[gg$X > 175 & gg$X < 188, ],
aes(X, ymin = 0, ymax = Y), colour="#E6205F") +
labs(x = NULL, y = NULL) +
geom_path(size = 1) +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(),
axis.line.y = element_blank(), axis.text.x = element_blank()) +
geom_vline(xintercept = c(175, 188),
linetype = "dashed") +
geom_hline(yintercept = 0) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
grid.arrange(inicio, p175, p188, final, ncol = 4,
top = textGrob("1.000 - 0.3602 - 0.1164 = 0.5234", gp = gpar(fontsize = 27,font = 8)))
set.seed(1)
m <- 0
s <- 1
X <- m + s * seq(-4, 4, 0.01)
Y <- dnorm(X, m, s)
gg   <- data.frame(X,Y)
library(ggplot2)
ggplot(data = gg, mapping = aes(x = X, y = Y)) +
geom_linerange(data = gg[gg$X < 2.97 & gg$X > -2.97,], # 99.7%
aes(X, ymin = 0, ymax = Y), colour="#E6205F") +
geom_linerange(data = gg[gg$X < 1.96 & gg$X > -1.96,], # 95%
aes(X, ymin = 0, ymax = Y), colour="#E97C31") +
geom_linerange(data = gg[gg$X < .99 & gg$X > -.99,], # 68%
aes(X, ymin = 0, ymax = Y), colour="#EAB217") +
scale_x_continuous(breaks = seq(m - 3*s, m + 3*s, s)) +
geom_path(size = 1) +
labs(x = NULL, y = NULL) +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(),
axis.line.y = element_blank(),
axis.text.x = element_blank(), axis.ticks.x = element_blank(),
axis.line.x = element_blank()) +
geom_hline(yintercept = 0) +
annotate(geom = "text", x = 0, y = 0.09, label = "95%", size = 4) +
annotate(geom = "text", x = 0, y = 0.03, label = "99.7%", size = 4) +
annotate(geom = "text", x = 0, y = 0.26, label = "68%", size = 4) +
geom_segment(aes(x = -1.96, y = 0.07, xend = 1.96, yend = 0.07)) +
geom_segment(aes(x = -1.96, y = 0, xend = -1.96, yend = 0.07), linetype = "dashed") +
geom_segment(aes(x = 1.96, y = 0, xend = 1.96, yend = 0.07), linetype = "dashed") + # 95%
geom_segment(aes(x = -2.97, y = 0.02, xend = 2.97, yend = 0.02)) +
geom_segment(aes(x = -2.97, y = 0, xend = -2.97, yend = 0.02), linetype = "dashed") +
geom_segment(aes(x = 2.97, y = 0, xend = 2.97, yend = 0.02), linetype = "dashed") + #99.7%
geom_segment(aes(x = -.99, y = 0.25, xend = .99, yend = 0.25)) +
geom_segment(aes(x = -.99, y = 0, xend = -.99, yend = 0.25), linetype = "dashed") +
geom_segment(aes(x = .99, y = 0, xend = .99, yend = 0.25), linetype = "dashed") +
annotate(geom = "text", x = 0, y = -0.02, label = expression(mu*''), size = 4) +
annotate(geom = "text", x = 1, y = -0.02, label = expression(mu*'+'*sigma), size = 4) +
annotate(geom = "text", x = -1, y = -0.02, label = expression(mu*'-'*sigma), size = 4) +
annotate(geom = "text", x = 2, y = -0.02, label = expression(mu*'+ 2'*sigma), size = 4) +
annotate(geom = "text", x = -2, y = -0.02, label = expression(mu*'- 2'*sigma), size = 4) +
annotate(geom = "text", x = 3, y = -0.02, label = expression(mu*'+ 3'*sigma), size = 4) +
annotate(geom = "text", x = -3, y = -0.02, label = expression(mu*'- 3'*sigma), size = 4) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
hist <- ggplot() +
geom_histogram(aes(x = obs, y = ..density..), bins = 9, color = "white", fill = "#EAB217") +
theme(axis.title.y = element_blank(), axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
labs(x = "Altura masculina (em cm)") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
dados <- data.frame(obs)
qq <- ggplot(data = dados, mapping = aes(sample = obs)) +
stat_qq_line() +
stat_qq_point(color = "#EAB217") +
labs(x = "Theoretical Quantiles", y = "Sample Quantiles") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
require(qqplotr) # para o qqplot
qq <- ggplot(data = dados, mapping = aes(sample = obs)) +
stat_qq_line() +
stat_qq_point(color = "#EAB217") +
labs(x = "Theoretical Quantiles", y = "Sample Quantiles") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
grid.arrange(hist, qq, ncol = 2)
qq <- ggplot(data = dados, mapping = aes(sample = obs)) +
stat_qq_line(color = 'white') +
stat_qq_point(color = "#EAB217") +
labs(x = "Theoretical Quantiles", y = "Sample Quantiles") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
qq
his_3 <- ggplot(data = dados) +
geom_histogram(aes(x = obs, y = ..density.., fill = n), bins = 13,
color = "white") +
theme(axis.ticks.y = element_blank(), axis.text.y = element_blank()) +
labs(x = "", y = "") + facet_wrap(~n) +
theme(legend.position = "none") +
scale_fill_manual(values = c('#E6205F', '#E97C31', "#EAB217")) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
set.seed(35)
dados = data.frame(c(rnorm(40), rnorm(100), rnorm(400)),
c(rep("40", 40), rep("100", 100), rep("400", 400))) #simulando os dados
colnames(dados) <- c("obs", "n") #nomear as colunas
dados$n <- factor(dados$n, levels = unique(dados$n)) #deixar a ordem de acordo com o banco
his_3 <- ggplot(data = dados) +
geom_histogram(aes(x = obs, y = ..density.., fill = n), bins = 13,
color = "white") +
theme(axis.ticks.y = element_blank(), axis.text.y = element_blank()) +
labs(x = "", y = "") + facet_wrap(~n) +
theme(legend.position = "none") +
scale_fill_manual(values = c('#E6205F', '#E97C31', "#EAB217")) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
qq_3 <- ggplot(data = dados, aes(sample = obs, color = n)) +
stat_qq() +
stat_qq_line(color = 'white') +
theme(axis.ticks.y = element_blank(), axis.text.y = element_blank()) +
labs(x = "",y = "") + facet_wrap(~n) +
theme(legend.position = "none") +
scale_color_manual(values = c('#E6205F', '#E97C31', "#EAB217")) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
grid.arrange(his_3, qq_3, ncol = 1)
set.seed(35)
dados = data.frame(c(rnorm(40), rnorm(100), rnorm(400)),
c(rep("40", 40), rep("100", 100), rep("400", 400))) #simulando os dados
colnames(dados) <- c("obs", "n") #nomear as colunas
dados$n <- factor(dados$n, levels = unique(dados$n)) #deixar a ordem de acordo com o banco
View(dados)
ggplot(data = dados) +
geom_histogram(aes(x = obs, y = ..density.., fill = n), bins = 13,
color = "white") +
theme(axis.ticks.y = element_blank(), axis.text.y = element_blank()) +
labs(x = "", y = "") + facet_wrap(~n) +
theme(legend.position = "none") +
scale_fill_manual(values = c('#E6205F', '#E97C31', "#EAB217")) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
ggplot(data = dados, aes(sample = obs, color = n)) +
stat_qq() +
stat_qq_line(color = 'white') +
theme(axis.ticks.y = element_blank(), axis.text.y = element_blank()) +
labs(x = "",y = "") + facet_wrap(~n) +
theme(legend.position = "none") +
scale_color_manual(values = c('#E6205F', '#E97C31', "#EAB217")) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
ggplot(data = dados, aes(sample = obs, color = n)) +
stat_qq() +
stat_qq_line() +
theme(axis.ticks.y = element_blank(), axis.text.y = element_blank()) +
labs(x = "",y = "") + facet_wrap(~n) +
theme(legend.position = "none") +
scale_color_manual(values = c('#E6205F', '#E97C31', "#EAB217")) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
library(gganimate)
set.seed(1)
tres <- data.frame(obs <- c(rnorm(40), rnorm(100), rnorm(400), rnorm(1000)),
n <- c(rep(40, 40), rep(100, 100), rep(400, 400), rep(1000, 1000)))
colnames(tres) <- c("obs", "n")
ggplot(tres, aes(x = obs, fill = n)) +
geom_histogram(aes(y = ..density..), bins = 10, color = "white") +
scale_x_continuous(breaks = seq(-4, 4, 1)) +
scale_fill_gradient(low = "#E6205F", high = "#EAB217") +
theme(axis.ticks.y = element_blank(),
axis.text.y = element_blank(), legend.position = 'none') +
# Here comes the gganimate specific bits
labs(title = 'Tamanho da amostra: {frame_time}', x = ' ', y = ' ') +
transition_time(as.integer(n)) +
ease_aes('linear') +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
library(openintro)
data(nba.heights)
obs <- nba.heights[, 4]
obs <- obs*2.54 #está em inches, transformar para cm
hist2 <- ggplot() +
geom_histogram(aes(x = obs, y = ..density..), bins = 11, color = "white", fill = "#E97C31") +
theme(axis.title.y = element_blank(), axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
labs(x = "Altura (em cm)") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
dados <- data.frame(obs)
qq2 <- ggplot(data = dados, mapping = aes(sample = obs)) +
stat_qq_line(color = 'white') +
stat_qq_point(color = "#E97C31") +
labs(x = "Theoretical Quantiles", y = "Sample Quantiles") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
grid.arrange(hist2, qq2, ncol = 2)
obs <- c(-110, -9, -60, 316, -200, -196,
320, -160, 31, 331, 1731, 21,
-926, -475, 914, -300, -15, 1,
-29, 829, 761, 227, -141, -672,
352, 385, 24, 103, -826, 95,
115, 39, -9, -1000, -35, -200,
-200, 235, 70, 307, 135, 60,
-100, -295, -1000, 361, -95,
337, 3712, -255)
hist2 <- ggplot() +
geom_histogram(aes(x = obs, y = ..density..), bins = 11, color = "white", fill = "#E97C31") +
theme(axis.title.y = element_blank(), axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
labs(x = "Altura (em cm)") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
dados <- data.frame(obs)
qq2 <- ggplot(data = dados, mapping = aes(sample = obs)) +
stat_qq_line() +
stat_qq_point(color = "#E97C31") +
labs(x = "Theoretical Quantiles", y = "Sample Quantiles") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
grid.arrange(hist2, qq2, ncol = 2)
qq2 <- ggplot(data = dados, mapping = aes(sample = obs)) +
stat_qq_line(color = 'white') +
stat_qq_point(color = "#E97C31") +
labs(x = "Theoretical Quantiles", y = "Sample Quantiles") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
qq2
obs1 <- c(94.26, 79.54, 68.06, 63.96, 68.19, 89.73, 85.41, 76.29, 87.96, 87.32, 77.23, 58.01, 82.76, 80.17, 111.07, 88.07, 68.12, 87.58, 78.14, 39.64, 54.84, 84.88, 77.49, 91.56, 112.59, 97.78, 92.86, 100.78, 88.17, 71.69, 86.64, 80.79, 64.77, 103.2, 84.88, 69.51, 60.65, 68.41, 80.48, 71.39, 84.21, 87.66, 78.76, 74.04, 101.89, 89.83, 74.83, 84.47, 77.82, 88.07, 79.19, 58.31, 96.49, 4.27, 81.02, 80.36, 69.74, 77.78, 78.58, 62.12, 116.55, 83.32, 103.85, 90.29, 86.96, 71.35, 119.21, 82.68, 63.13, 109.77, 30.63, 93.48, 97.25, 56.43, 94.07, 74.97, 105.69, 76.5, 89.74, 47.85, 92.37, 128.92, 70.12, 74.07, 92.88, 81.49, 69.54, 70.66, 88.6, 92.74, 103.38, 109.85, 83.35, 94.64, 74.3, 93.15, 62.33, 72.77, 75.63, 91.18)
obs2 <- c(10.41, 8.256, 9.035, 8.487, 7.985, 12.801, 8.367, 8.619, 10.431, 9.883, 12.596, 9.962, 12.641, 11.221, 12.362, 8.111, 5.772, 11.269, 9.259, 12.357, 8.928, 8.173, 6.02, 6.59, 10.582, 9.163, 5.017, 7.32, 8.195, 8.181, 12.547, 9.042, 13.811, 7.195, 9.215, 9.873, 11.662, 10.123, 7.784, 9.383, 8.754, 10.248, 8.332, 9.878, 11.794, 8.868, 11.171, 4.703, 9.362, 10.648)
obs3 <- c(-2.271, -2.205, -2.516, -1.583, -2.641, -1.948, -2.109, -1.847, -2.484, -2.523, -1.458, -1.544, -0.976, -1.652, -1.894, -1.781, -1.788, -2.733, -2.422, -1.015, -1.939, -1.381, -1.754, -1.358, -1.77, -1.46, -2.018, -2.659, -2.137, -2.064, -2.503, -1.969, -1.309, -2.121, -2.247, -1.361, -2.423, -1.846, -1.851, -2.164, -2.579, -2.094, -1.758, -2.553, -2.175, -2.037, -2.134, -1.728, -2.008, -2.269, -1.962, -2.729, -2.063, -1.657, -2.076, -1.678, -1.766, -2.022, -1.716, -1.33, -3.047, -1.198, -3.141, -2.026, -3.251, -2.766, -2.127, -1.191, -1.879, -2.203, -1.871, -1.762, -2.114, -2.617, -2.041, -1.446, -1.844, -2.224, -3.023, -1.231, -1.001, -1.324, -2.18, -0.937, -1.862, -2.136, -1.821, -1.245, -2.025, -2.27, -1.746, -2.103, -2.224, -1.676, -1.369, -1.865, -1.841, -2.098, -1.728, -2.152, -1.959, -1.781, -1.635, -1.856, -2.037, -0.793, -2.663, -1.976, -1.851, -1.548, -1.594, -1.375, -2.372, -1.983, -1.761, -1.937, -2.559, -1.753, -0.6, -1.688, -1.605, -1.215, -2.31, -1.846, -1.919, -2.582, -2.923, -1.74, -3.141, -1.33, -2.46, -2.361, -2.727, -1.74, -2.372, -2.187, -2.339, -1.777, -2.358, -1.973, -2.094, -2.028, -1.905, -2.289, -1.001, -1.948, -2.55, -1.304, -2.81, -1.943, -2.19, -1.809, -2.509, -1.948, -1.455, -1.6, -2.81, -1.021, -1.264, -1.853, -2.357, -2.012, -2.379, -1.681, -1.795, -2.39, -2.217, -2.812, -2.625, -1.219, -1.21, -1.303, -2.825, -1.94, -1.388, -2.627, -1.85, -1.661, -1.369, -1.853, -1.177, -2.011, -2.505, -2.017, -1.262, -2.238, -2.513, -1.847, -2.333, -2.874, -1.802, -1.914, -2.002, -1.963, -3.067, -2.139, -1.611, -2.574, -2.037, -1.368, -1.574, -2.48, -2.62, -2.77, -1.608, -2.062, -1.773, -0.881, -2.073, -2.505, -2.122, -1.438, -2.187, -2.27, -1.692, -1.647, -3.085, -1.436, -2.867, -1.702, -1.708, -1.837, -1.327, -2.478, -1.971, -2.941, -1.395, -1.975, -2.145, -1.919, -1.81, -2.276, -2.183, -1.37, -2.328, -1.408, -2.925, -2.092, -2.462, -1.629, -2.461, -1.795, -2.299, -1.725, -1.69, -2.434, -1.472, -1.849, -1.793, -1.906, -2.643, -2.016, -2.032, -2.696, -2.169, -2.285, -2.301, -2.154, -3.027, -2.141, -2.835, -1.704, -2.788, -1.029, -2.727, -1.444, -1.508, -2.153, -2.57, -2.339, -1.515, -1.356, -2.242, -2.204, -2.093, -2.41, -2.009, -2.357, -1.214, -2.751, -1.587, -2.438, -2.194, -2.271, -2.278, -1.829, -2.14, -1.503, -2.075, -1.235, -1.965, -2.183, -1.596, -2.551, -2.462, -3.723, -2.059, -2.113, -2.174, -3.183, -1.831, -0.748, -2.482, -1.605, -1.25, -1.358, -2.845, -2.539, -1.431, -2.654, -2.003, -1.891, -2.593, -1.782, -1.756, -2.477, -1.882, -1.637, -2.467, -1.089, -2.739, -1.822, -2.153, -2.073, -1.828, -2.325, -1.213, -1.869, -1.708, -1.508, -2.31, -1.262, -2.788, -2.32, -1.697, -1.681, -1.935, -2.677, -1.792, -1.802, -2.876, -1.652, -1.861, -2.209, -3.094, -1.013, -2.992, -3.04, -1.948, -1.572, -1.95, -1.742, -1.958, -2.513, -1.599, -2.027, -1.605, -1.52, -1.955, -1.95, -1.474, -2.284, -0.96, -2.222, -2.618, -2.14, -1.752, -1.108, -1.687, -2.145, -1.921, -2.184, -1.818, -1.84, -2.474, -2.005, -1.76, -1.991, -2.461, -2.383, -2.652, -2.385, -1.529, -2.079, -2.112, -2.192, -1.696, -2.206, -1.737, -1.858, -2.573, -2.474, -1.539, -1.689, -1.854, -1.737, -2.021, -1.606, -2.009, -1.419, -2.55, -1.558, -1.887, -2.149, -2.666, -2.271, -1.587, -2.419, -1.902, -2.953, -1.811, -2.449, -2.2, -1.736, -1.537, -1.26, -2.184, -2.096, -1.73, -1.958, -2.4, -3.378, -1.808, -2.565, -1.508, -1.577, -2.504, -2.399, -2.333, -1.634, -1.11, -1.98, -2.014, -1.509, -2.143, -1.432, -1.899, -1.325, -1.32, -1.617, -1.834, -1.849, -1.636, -1.916, -1.166, -1.768, -1.388, -2.293, -2.254, -2.814, -1.44, -1.846, -1.699, -1.499, -2.043, -2.077, -2.02, -1.765, -2.472, -1.547, -2.317, -2.318, -1.686, -1.46, -2.514, -1.343, -2.233, -2.277, -2.298, -2.191, -2.014, -2.219, -1.853, -0.72, -1.607, -1.699, -2.443, -0.588, -1.78, -2.298, -2.168, -2.23, -2.497, -2.585, -3.055, -1.472, -1.456, -2.195, -0.845, -2.057, -2.952, -1.802, -1.841, -1.58, -3.105, -1.996, -1.799, -1.844, -1.373)
obs4 <- c(-2.428, -9.492, 22.085, 0.348, -11.842, -7.309, -8.679, 62.64, 44.868, -11.637, -3.771, 29.815, -15.36, 15.987, 0.455)
dados <- data.frame(obs1)
q1 <- ggplot(data = dados, mapping = aes(sample = obs1)) +
stat_qq_point(color = "#E6205F") +
labs(x = "Theoretical Quantiles", y = "Sample Quantiles") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
dados <- data.frame(obs2)
q2 <- ggplot(data = dados, mapping = aes(sample = obs2)) +
stat_qq_point(color = "#E6205F") +
labs(x = "Theoretical Quantiles", y = "Sample Quantiles") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
dados <- data.frame(obs3)
q3 <- ggplot(data = dados, mapping = aes(sample = obs3)) +
stat_qq_point(color = "#E6205F") +
labs(x = "Theoretical Quantiles", y = "Sample Quantiles") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
dados <- data.frame(obs4)
q4 <- ggplot(data = dados, mapping = aes(sample = obs4)) +
stat_qq_point(color = "#E6205F") +
labs(x = "Theoretical Quantiles", y = "Sample Quantiles") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
grid.arrange(q1, q2, q3, q4, ncol = 2)
set.seed(1)
obs1 <- 0.3 * rchisq(25, 1.4)
set.seed(5)
obs2 <- 16 - 2 * rlnorm(50, sdlog = 0.8)
dados <- data.frame(obs1)
q1 <- ggplot(data = dados, mapping = aes(sample = obs1)) +
stat_qq_point(color = "#EAB217") +
labs(x = "Theoretical Quantiles", y = "Sample Quantiles")+
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
dados <- data.frame(obs2)
q2 <- ggplot(data = dados, mapping = aes(sample = obs2)) +
stat_qq_point(color = "#EAB217") +
labs(x = "Theoretical Quantiles", y = "Sample Quantiles")+
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
grid.arrange(q1, q2, ncol = 2)
set.seed(242)
ggplot() +
geom_histogram(aes(x = rgeom(n = 1000, prob = 0.35), y = ..density..), bins = 12,
color = "white", fill = "#E6205F") +
labs(x = "Número de tentativas", y = "Probabilidade") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
k  <- -50:500
p  <- 0.1
n  <- c(10, 30, 100, 300)
xl <- c(0, 0, 0, 10) - 1
xu <- c(7, 11, 24, 50) - 1
ste1 = ggplot() +
geom_step(aes(k - 0.05, dbinom(k, n[1], p)), color = "#EAB217") +
xlim(c(xl[1], xu[1])) +
labs(x = paste0("n = ", n[1])) +
theme(axis.title.y = element_blank(), axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
ste2 = ggplot() +
geom_step(aes(k - 0.05, dbinom(k, n[2], p)), color = "#EAB217") +
xlim(c(xl[2], xu[2])) +
labs(x = paste0("n = ", n[2])) +
theme(axis.title.y = element_blank(), axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
ste3 = ggplot() +
geom_step(aes(k - 0.05, dbinom(k, n[3], p)), color = "#EAB217") +
xlim(c(xl[3], xu[3])) +
labs(x = paste0("n = ", n[3])) +
theme(axis.title.y = element_blank(), axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
ste4 = ggplot() +
geom_step(aes(k - 0.05, dbinom(k, n[4], p)), color = "#EAB217") +
xlim(c(xl[4], xu[4])) +
labs(x = paste0("n = ", n[4])) +
theme(axis.title.y = element_blank(), axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
grid.arrange(ste1, ste2, ste3, ste4, ncol = 2)
set.seed(1)
r <- 200 / 10^6
N <- 8 * 10^6
n <- 365
x <- rpois(n, r * N / 365)
ggplot() +
geom_histogram(aes(x = x), bins = 11, color = "white", fill = "#EAB217") +
scale_x_continuous(breaks = seq(0, 10, 1)) +
labs(x = NULL, y = NULL)  +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1))
