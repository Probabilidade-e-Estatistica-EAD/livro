main = '',
xlab = '',
ylab = '',
axes = FALSE,
xlim = xlim,
ylim = R,
col = COL[1],
lwd = 1.5)
abline(h = 0)
axis(1, at = at[[i]], cex.axis = cex.axis)
addNormal(1, 1 / sqrt(n[i]), lwd = 2)
x <- rep(NA, ss)
for (j in 1:ss) {
x[j] <- mean(rlnorm(n[i], log(1 / sqrt(2)),
sqrt(log(2))) + 0.15 / i^3)
}
d <- density(x, adjust = bw)
R <- range(c(0, d$y)) * roof
plot(d$x, d$y,
type = 'l',
main = '',
xlab = '',
ylab = '',
axes = FALSE,
xlim = xlim,
ylim = R,
col = COL[1],
lwd = 1.5)
abline(h = 0)
axis(1, at = at[[i]], cex.axis = cex.axis)
addNormal(1, 1 / sqrt(n[i]), lwd = 2)
cat(1 / sqrt(n[i]), sd(x), n[i], '\n')
}
myPDF('cltSimulations.pdf', 6.8, 8,
mar = rep(0, 4),
mgp = c(4, 0.9, 0))
layout(matrix(1:20, 5, byrow = TRUE),
widths = c(0.85, 2, 2, 2),
heights = rep(2, 5))
set.seed(50)
n  <- c(2,5,12,30) #c(2,6,15,50)
ss <- 4*10^5
cex.axis <- 1.3
roof <- 1.03
bw <- 1.4
addNormal <- function(m, s, lty = 2,col = COL[4], ...){
X <- seq(m-5*s, m+5*s, s/9.8)
Y <- dnorm(X, m, s)
lines(X, Y, lty = lty, col = col, ...)
}
dev.off()
dev.off()
dev.off()
dev.off()
histPlot(poker$winnings,
xlab = 'Poker winnings and losses (US$)',
ylab = 'Frequency',
col = COL[1])
ggplot(data = poker)
ggplot(data = poker) +
geom_histogram(aes(x = winnings), color = "white")
ggplot(data = poker) +
geom_histogram(aes(x = winnings), color = "white", bins = 10)
ggplot(data = poker) +
geom_histogram(aes(x = winnings), color = "white", bins = 9)
ggplot(data = poker) +
geom_histogram(aes(x = winnings), color = "white", bins = 8)
ggplot(data = poker) +
geom_histogram(aes(x = winnings), color = "white", bins = 6)
ggplot(data = poker) +
geom_histogram(aes(x = winnings), color = "white", bins = 9)
histPlot(poker$winnings,
xlab = 'Poker winnings and losses (US$)',
ylab = 'Frequency',
col = COL[1])
ggplot(data = poker) +
geom_histogram(aes(x = winnings), color = "white", bins = 9, fill = "skyblue2")
ggplot(data = poker) +
geom_histogram(aes(x = winnings), color = "white", bins = 9, fill = "skyblue2") +
labs(x = "Ganhos e perdas de poker (US$)", y = "Frequência")
set.seed(1)
m <- 0; s <- 1
X <- m + s * seq(-4, 4, 0.01)
Y <- dnorm(X, m, s)
gg   <- data.frame(X,Y)
ggplot(data = gg, mapping = aes(x = X, y = Y)) +
geom_path() +
geom_linerange(data = gg[gg$X >2,],
aes(X, ymin = 0, ymax = Y), colour="skyblue1", alpha = 0.6) +
scale_x_continuous(breaks = seq(m - 3*s, m + 3*s, s)) +
labs(x = NULL, y = NULL) +
theme(axis.text = element_blank(), axis.ticks.y = element_blank(),
axis.line.y = element_blank()) + geom_hline(yintercept = 0) +
annotate(geom = "text", x = 0, y = -0.02,
label = expression(H[0]*': '*mu*' = 7  '), size = 3) +
geom_segment(aes(x = 0, y = 0, xend = 0, yend = 0.4), linetype = "dashed") +
annotate(geom = "text", x = 2, y = -0.02,
label = expression(bar(x)*' = 7.42'), size = 3) +
geom_segment(aes(x = 2, y = 0, xend = 2, yend = 0.055), linetype = "dashed") +
annotate(geom = "text", x = 2.3, y = 0.15,
label = "p-valor de \n 0.007", size = 3, color = "skyblue3") +
geom_segment(aes(x = 2.3, xend = 2.3, y = 0.11, yend = 0.05),
arrow = arrow(length = unit(0.1, "cm")), color = "skyblue3") +
annotate(geom = "text", x = 0, y = 0.15,
label = "0.993", size = 6)
ggplot(data = gg, mapping = aes(x = X, y = Y)) +
geom_path() +
geom_linerange(data = gg[gg$X >2,],
aes(X, ymin = 0, ymax = Y), colour="skyblue1", alpha = 0.6) +
scale_x_continuous(breaks = seq(m - 3*s, m + 3*s, s)) +
labs(x = NULL, y = NULL) +
theme(axis.text = element_blank(), axis.ticks.y = element_blank(),
axis.line.y = element_blank()) + geom_hline(yintercept = 0) +
annotate(geom = "text", x = 0, y = -0.02,
label = ("null diff. = 0"), size = 3) +
geom_segment(aes(x = 0, y = 0, xend = 0, yend = 0.4), linetype = "dashed") +
annotate(geom = "text", x = 2, y = -0.02,
label = "obs diff. = 0.025", size = 3) +
geom_segment(aes(x = 2, y = 0, xend = 2, yend = 0.055), linetype = "dashed") +
annotate(geom = "text", x = 2.3, y = 0.15,
label = "p-valor de \n 0.027", size = 3, color = "skyblue3") +
geom_segment(aes(x = 2.3, xend = 2.3, y = 0.11, yend = 0.05),
arrow = arrow(length = unit(0.1, "cm")), color = "skyblue3") +
annotate(geom = "text", x = 0, y = 0.15,
label = "0.973", size = 6)
ggplot(data = gg, mapping = aes(x = X, y = Y)) +
geom_path() +
geom_linerange(data = gg[gg$X >2,],
aes(X, ymin = 0, ymax = Y), colour="skyblue1", alpha = 0.6) +
scale_x_continuous(breaks = seq(m - 3*s, m + 3*s, s)) +
labs(x = NULL, y = NULL) +
theme(axis.text = element_blank(), axis.ticks.y = element_blank(),
axis.line.y = element_blank()) + geom_hline(yintercept = 0) +
annotate(geom = "text", x = 0, y = -0.02, label = ("null diff. = 0"), size = 3) +
annotate(geom = "text", x = 2, y = -0.02, label = "obs diff. = 0.025", size = 3) +
geom_segment(aes(x = 2, y = 0, xend = 2, yend = 0.055), linetype = "dashed") +
annotate(geom = "text", x = 2.3, y = 0.15, label = "p-valor de \n 0.027", size = 3, color = "skyblue3") +
geom_segment(aes(x = 2.3, xend = 2.3, y = 0.11, yend = 0.05),
arrow = arrow(length = unit(0.1, "cm")), color = "skyblue3") +
annotate(geom = "text", x = 0, y = 0.15, label = "0.973", size = 6)
ggplot(data = gg, mapping = aes(x = X, y = Y)) +
geom_path() +
geom_linerange(data = gg[gg$X >2,],
aes(X, ymin = 0, ymax = Y), colour="skyblue1", alpha = 0.6) +
scale_x_continuous(breaks = seq(m - 3*s, m + 3*s, s)) +
labs(x = NULL, y = NULL) +
theme(axis.text = element_blank(), axis.ticks.y = element_blank(),
axis.line.y = element_blank()) + geom_hline(yintercept = 0) +
annotate(geom = "text", x = 0, y = -0.02, label = ("null diff. = 0"), size = 3) +
geom_segment(aes(x = 0, y = 0, xend = 0, yend = 0.4), linetype = "dashed") +
annotate(geom = "text", x = 2, y = -0.02, label = "obs diff. = 0.025", size = 3) +
geom_segment(aes(x = 2, y = 0, xend = 2, yend = 0.055), linetype = "dashed") +
annotate(geom = "text", x = 2.3, y = 0.15, label = "p-valor de \n 0.027", size = 3, color = "skyblue3") +
geom_segment(aes(x = 2.3, xend = 2.3, y = 0.11, yend = 0.05),
arrow = arrow(length = unit(0.1, "cm")), color = "skyblue3") +
annotate(geom = "text", x = 0, y = 0.15, label = "0.973", size = 6)
ggplot(data.frame(means), aes(sample = means)) +
stat_qq(color = "#E97C31") +
stat_qq_line(color = "#E97C31")
require(qqplotr)
ggplot(data.frame(means), aes(sample = means)) +
stat_qq(color = "#E97C31") +
stat_qq_line(color = "#E97C31")
ggplot(data.frame(means), aes(sample = means)) +
stat_qq(color = "#E97C31") +
stat_qq_line(color = "#E97C31")
qnorm(0.99/2)
qnorm((0.01/2))
qnorm(0.01/2)
abs(qnorm(0.01/2))
round((abs(qnorm(0.01/2))),2)
0.01/2
1-0.01/2
require(plotly)
p <- ggplot() + geom_line(aes(x = 1:100, y = xBars), color = "#E6205F") +
geom_hline(yintercept = m, linetype = "dashed", color = "#E6205F") +
labs(y = "Média de dias fisicamente ativo \n /por semana",
x = "Tamanho da amostra")
plotly(p)
require(ggiraph)
require(ggiraph)
install.packages("systemfonts")
require(ggiraph)
p
d <- dados_samp$ativo
xBars <- cumsum(d) / (1:100)
m <- mean(dados$ativo, na.rm = TRUE)
p <- ggplot() + geom_line(aes(x = 1:100, y = xBars), color = "#E6205F") +
geom_hline(yintercept = m, linetype = "dashed", color = "#E6205F") +
labs(y = "Média de dias fisicamente ativo \n /por semana",
x = "Tamanho da amostra")
plotly(p)
p
p <- ggplot(aes(x = 1:100, y = xBars)) +
geom_line_interactive(aes(tooltip = xBars), color = "#E6205F") +
geom_hline(yintercept = m, linetype = "dashed", color = "#E6205F") +
labs(y = "Média de dias fisicamente ativo \n /por semana",
x = "Tamanho da amostra")
ggplot(aes(x = 1:100, y = xBars))
data.frame(1:100, xBars)
ggplot(data = data.frame(1:100, xBars), aes(x = X1.100, y = xBars))
ggplot(data = data.frame(1:100, xBars), aes(x = X1.100, y = xBars)) +
geom_line_interactive(aes(tooltip = xBars), color = "#E6205F")
ggplot(data = data.frame(1:100, xBars), aes(x = X1.100, y = xBars)) +
geom_line_interactive(aes(tooltip = xBars), color = "#E6205F") +
geom_hline(yintercept = m, linetype = "dashed", color = "#E6205F") +
labs(y = "Média de dias fisicamente ativo \n /por semana",
x = "Tamanho da amostra")
girafe(code = print(p))
girafe(code = print(p))
ggplotly(p)
set.seed(5)
means <- c()
for (i in 1:1000) {
these <- sample(nrow(dados), 100)
means[i] <- mean(dados$ativo[these], na.rm = TRUE)
}
m <- mean(dados$ativo, na.rm = TRUE)
s <- sd(dados$ativo, na.rm = TRUE) / 10
ggplot() +
labs(x = "Média Amostral", y = "Frequência") +
geom_rect(mapping = aes(xmin = m - s, xmax = m + s, ymin = 0, ymax = 93),
fill = "gray60") +
geom_rect(mapping = aes(xmin = m - (2*s), xmax = m + (2*s), ymin = 0, ymax = 93),
fill = "gray88", alpha = 0.5) +
geom_rect(mapping = aes(xmin = m - (3*s), xmax = m + (3*s), ymin = 0, ymax = 93),
fill = "gray78", alpha = 0.5) +
geom_histogram(aes(x = means), color = "black", fill = "#E97C31") +
geom_vline(xintercept = m, linetype = "dashed")
set.seed(5)
means <- c()
for (i in 1:1000) {
these <- sample(nrow(dados), 100)
means[i] <- mean(dados$ativo[these], na.rm = TRUE)
}
m <- mean(dados$ativo, na.rm = TRUE)
s <- sd(dados$ativo, na.rm = TRUE) / 10
ggplot() +
labs(x = "Média Amostral", y = "Frequência") +
geom_rect(mapping = aes(xmin = m - s, xmax = m + s, ymin = 0, ymax = 93),
fill = "gray60") +
geom_rect(mapping = aes(xmin = m - (2*s), xmax = m + (2*s), ymin = 0, ymax = 93),
fill = "gray88", alpha = 0.5) +
geom_rect(mapping = aes(xmin = m - (3*s), xmax = m + (3*s), ymin = 0, ymax = 93),
fill = "gray78", alpha = 0.5) +
geom_histogram(aes(x = means), color = "black", fill = "#E97C31") +
geom_vline(xintercept = m, linetype = "dashed")
hs <- ggplot() +
labs(x = "Média Amostral", y = "Frequência") +
geom_rect(mapping = aes(xmin = m - s, xmax = m + s, ymin = 0, ymax = 93),
fill = "gray60") +
geom_rect(mapping = aes(xmin = m - (2*s), xmax = m + (2*s), ymin = 0, ymax = 93),
fill = "gray88", alpha = 0.5) +
geom_rect(mapping = aes(xmin = m - (3*s), xmax = m + (3*s), ymin = 0, ymax = 93),
fill = "gray78", alpha = 0.5) +
geom_histogram(aes(x = means), color = "black", fill = "#E97C31") +
geom_vline(xintercept = m, linetype = "dashed")
ggplotly(hs)
ggplot() +
labs(x = "Média Amostral", y = "Frequência") +
geom_rect(mapping = aes(xmin = m - s, xmax = m + s, ymin = 0, ymax = 93),
fill = "gray60") +
geom_rect(mapping = aes(xmin = m - (2*s), xmax = m + (2*s), ymin = 0, ymax = 93),
fill = "gray88", alpha = 0.5) +
geom_rect(mapping = aes(xmin = m - (3*s), xmax = m + (3*s), ymin = 0, ymax = 93),
fill = "gray78", alpha = 0.5) +
geom_histogram(aes(x = means), color = "black", fill = "#E97C31") +
geom_vline(xintercept = m, linetype = "dashed")
ggplot() +
labs(x = "Média Amostral", y = "Frequência") +
geom_rect(mapping = aes(xmin = m - s, xmax = m + s, ymin = 0, ymax = 93),
fill = "gray60")
ggplot() +
labs(x = "Média Amostral", y = "Frequência") +
geom_rect(mapping = aes(xmin = m - s, xmax = m + s, ymin = 0, ymax = 93),
fill = "gray60") +
geom_rect(mapping = aes(xmin = m - (2*s), xmax = m + (2*s), ymin = 0, ymax = 93),
fill = "gray88", alpha = 0.5)
ggplot() +
labs(x = "Média Amostral", y = "Frequência") +
geom_rect(mapping = aes(xmin = m - s, xmax = m + s, ymin = 0, ymax = 93),
fill = "gray60") +
geom_rect(mapping = aes(xmin = m - (2*s), xmax = m + (2*s), ymin = 0, ymax = 93),
fill = "gray88", alpha = 0.5) +
geom_rect(mapping = aes(xmin = m - (3*s), xmax = m + (3*s), ymin = 0, ymax = 93),
fill = "gray78", alpha = 0.5)
ggplot() +
labs(x = "Média Amostral", y = "Frequência") +
geom_rect(mapping = aes(xmin = m - s, xmax = m + s, ymin = 0, ymax = 93),
fill = "gray60") +
geom_rect(mapping = aes(xmin = m - (2*s), xmax = m + (2*s), ymin = 0, ymax = 93),
fill = "gray88", alpha = 0.5) +
geom_rect(mapping = aes(xmin = m - (3*s), xmax = m + (3*s), ymin = 0, ymax = 93),
fill = "gray48", alpha = 0.5)
ggplot() +
labs(x = "Média Amostral", y = "Frequência") +
geom_rect(mapping = aes(xmin = m - s, xmax = m + s, ymin = 0, ymax = 93),
fill = "gray60") +
geom_rect(mapping = aes(xmin = m - (2*s), xmax = m + (2*s), ymin = 0, ymax = 93),
fill = "gray28", alpha = 0.5) +
geom_rect(mapping = aes(xmin = m - (3*s), xmax = m + (3*s), ymin = 0, ymax = 93),
fill = "gray48", alpha = 0.5)
ggplot() +
labs(x = "Média Amostral", y = "Frequência") +
geom_rect(mapping = aes(xmin = m - s, xmax = m + s, ymin = 0, ymax = 93),
fill = "gray60") +
geom_rect(mapping = aes(xmin = m - (2*s), xmax = m + (2*s), ymin = 0, ymax = 93),
fill = "gray28", alpha = 0.5) +
geom_rect(mapping = aes(xmin = m - (3*s), xmax = m + (3*s), ymin = 0, ymax = 93),
fill = "gray48", alpha = 0.5) +
geom_histogram(aes(x = means), color = "black", fill = "#E97C31") +
geom_vline(xintercept = m, linetype = "dashed")
set.seed(1)
amostras <- matrix(NA, ncol = 25, nrow = 100)
for (i in 1:25){
amostras[,i] <- sample(x = dados$ativo, size = 100, replace = FALSE)
}
vetor_medias <- apply(amostras, 2, mean, na.rm=TRUE) #vetor de medias
vetor_sd <- apply(amostras, 2, sd, na.rm=TRUE) #vetor de desvio padrao
vetor_ic_inf <- vetor_medias - (qnorm(0.975))*(vetor_sd/sqrt(100)) #vetor de IC inferior
vetor_ic_sup <- vetor_medias + (qnorm(0.975))*(vetor_sd/sqrt(100)) #vetor de IC superior
ggplot() +
geom_vline(xintercept = m, linetype = "dashed") +
geom_segment(aes(x = vetor_ic_inf, y = 1:25,
xend = vetor_ic_sup, yend = 1:25),
color = ifelse(vetor_ic_inf < m, '#E97C31', '#E6205F')) +
geom_point(aes(x = vetor_medias, y = 1:25),
color = ifelse(vetor_ic_inf < m, '#E97C31', '#E6205F')) +
labs(y = NULL, x = NULL) +
theme(axis.ticks = element_blank(), axis.text = element_blank(), line = element_blank())
ggplot() +
geom_vline(xintercept = m, linetype = "dashed") +
geom_segment(aes(x = vetor_ic_inf, y = 1:25,
xend = vetor_ic_sup, yend = 1:25),
color = ifelse(vetor_ic_inf < m, '#E97C31', '#E6205F')) +
geom_point(aes(x = vetor_medias, y = 1:25),
color = ifelse(vetor_ic_inf < m, '#E97C31', '#E6205F')) +
labs(y = NULL, x = NULL) +
theme(axis.ticks = element_blank(), axis.text = element_blank(), line = element_blank())
ggplot() +
geom_vline(xintercept = m, linetype = "dashed")
ggplot() +
geom_vline(xintercept = m, linetype = "dashed") +
geom_segment(aes(x = vetor_ic_inf, y = 1:25,
xend = vetor_ic_sup, yend = 1:25),
color = ifelse(vetor_ic_inf < m, '#E97C31', '#E6205F'))
ggplot() +
geom_vline(xintercept = m, linetype = "dashed") +
geom_segment(aes(x = vetor_ic_inf, y = 1:25,
xend = vetor_ic_sup, yend = 1:25),
color = ifelse(vetor_ic_inf < m, '#E97C31', '#E6205F')) +
geom_point(aes(x = vetor_medias, y = 1:25),
color = ifelse(vetor_ic_inf < m, '#E97C31', '#E6205F'))
ggplot() +
geom_vline(xintercept = m, linetype = "dashed") +
geom_segment(aes(x = vetor_ic_inf, y = 1:25,
xend = vetor_ic_sup, yend = 1:25),
color = ifelse(vetor_ic_inf < m, '#E97C31', '#E6205F')) +
geom_point(aes(x = vetor_medias, y = 1:25),
color = ifelse(vetor_ic_inf < m, '#E97C31', '#E6205F')) +
labs(y = NULL, x = NULL)
ggplot() +
geom_vline(xintercept = m, linetype = "dashed") +
geom_segment(aes(x = vetor_ic_inf, y = 1:25,
xend = vetor_ic_sup, yend = 1:25),
color = ifelse(vetor_ic_inf < m, '#E97C31', '#E6205F')) +
geom_point(aes(x = vetor_medias, y = 1:25),
color = ifelse(vetor_ic_inf < m, '#E97C31', '#E6205F')) +
labs(y = NULL, x = NULL) +
theme(axis.ticks = element_blank(), axis.text = element_blank(), line = element_blank())
ggplot() +
geom_vline(xintercept = m, linetype = "dashed") +
geom_segment(aes(x = vetor_ic_inf, y = 1:25,
xend = vetor_ic_sup, yend = 1:25),
color = ifelse(vetor_ic_inf < m, '#E97C31', '#E6205F')) +
geom_point(aes(x = vetor_medias, y = 1:25),
color = ifelse(vetor_ic_inf < m, '#E97C31', '#E6205F')) +
labs(y = NULL, x = NULL) +
theme(axis.ticks = element_blank(), axis.text = element_blank())
ggplot() +
geom_vline(xintercept = m, linetype = "dashed") +
geom_segment(aes(x = vetor_ic_inf, y = 1:25,
xend = vetor_ic_sup, yend = 1:25),
color = ifelse(vetor_ic_inf < m, '#E97C31', '#E6205F')) +
geom_point(aes(x = vetor_medias, y = 1:25),
color = ifelse(vetor_ic_inf < m, 'black', 'black')) +
labs(y = NULL, x = NULL) +
theme(axis.ticks = element_blank(), axis.text = element_blank())
ggplot() +
geom_vline(xintercept = m, linetype = "dashed") +
geom_segment(aes(x = vetor_ic_inf, y = 1:25,
xend = vetor_ic_sup, yend = 1:25),
color = ifelse(vetor_ic_inf < m, '#E97C31', 'black')) +
geom_point(aes(x = vetor_medias, y = 1:25),
color = ifelse(vetor_ic_inf < m, '#E97C31', 'black')) +
labs(y = NULL, x = NULL) +
theme(axis.ticks = element_blank(), axis.text = element_blank())
ggplot() +
geom_vline(xintercept = m, linetype = "dashed") +
geom_segment(aes(x = vetor_ic_inf, y = 1:25,
xend = vetor_ic_sup, yend = 1:25),
color = ifelse(vetor_ic_inf < m, '#E6205F', '#EAB217')) +
geom_point(aes(x = vetor_medias, y = 1:25),
color = ifelse(vetor_ic_inf < m, '#E6205F', '#EAB217')) +
labs(y = NULL, x = NULL) +
theme(axis.ticks = element_blank(), axis.text = element_blank())
ggplot() +
labs(x = "Média Amostral", y = "Frequência") +
geom_rect(mapping = aes(xmin = m - s, xmax = m + s, ymin = 0, ymax = 12500),
fill = "gray60") +
geom_rect(mapping = aes(xmin = m - (2*s), xmax = m + (2*s), ymin = 0, ymax = 12500),
fill = "gray88", alpha = 0.5) +
geom_rect(mapping = aes(xmin = m - (3*s), xmax = m + (3*s), ymin = 0, ymax = 12500),
fill = "gray78", alpha = 0.5) +
geom_histogram(aes(x = means), color = "black", fill = "#E97C31") +
geom_vline(xintercept = m, linetype = "dashed")
set.seed(5)
means <- c()
for (i in 1:100000) {
these <- sample(nrow(dados), 100)
means[i] <- mean(dados$ativo[these], na.rm = TRUE)
}
s_mean <- ggplot() +
labs(x = "Média Amostral", y = "Frequência") +
geom_rect(mapping = aes(xmin = m - s, xmax = m + s, ymin = 0, ymax = 12500),
fill = "gray60") +
geom_rect(mapping = aes(xmin = m - (2*s), xmax = m + (2*s), ymin = 0, ymax = 12500),
fill = "gray88", alpha = 0.5) +
geom_rect(mapping = aes(xmin = m - (3*s), xmax = m + (3*s), ymin = 0, ymax = 12500),
fill = "gray78", alpha = 0.5) +
geom_histogram(aes(x = means), color = "black", fill = "#E97C31") +
geom_vline(xintercept = m, linetype = "dashed")
s_qq <-ggplot(data.frame(means), aes(sample = means)) +
stat_qq(color = "#E97C31")
grid.arrange(s_mean, s_qq, ncol = 2)
ggplot() +
labs(x = "Média Amostral", y = "Frequência") +
geom_rect(mapping = aes(xmin = m - s, xmax = m + s, ymin = 0, ymax = 12500),
fill = "gray60") +
geom_rect(mapping = aes(xmin = m - (2*s), xmax = m + (2*s), ymin = 0, ymax = 12500),
fill = "gray28", alpha = 0.5) +
geom_rect(mapping = aes(xmin = m - (3*s), xmax = m + (3*s), ymin = 0, ymax = 12500),
fill = "gray48", alpha = 0.5)
ggplot() +
labs(x = "Média Amostral", y = "Frequência") +
geom_rect(mapping = aes(xmin = m - s, xmax = m + s, ymin = 0, ymax = 12500),
fill = "gray60") +
geom_rect(mapping = aes(xmin = m - (2*s), xmax = m + (2*s), ymin = 0, ymax = 12500),
fill = "gray28", alpha = 0.5) +
geom_rect(mapping = aes(xmin = m - (3*s), xmax = m + (3*s), ymin = 0, ymax = 12500),
fill = "gray48", alpha = 0.5) +
geom_histogram(aes(x = means), color = "black", fill = "#E97C31") +
geom_vline(xintercept = m, linetype = "dashed")
ggplot(data = gg, mapping = aes(x = X, y = Y)) +
geom_path() +
geom_linerange(data = gg[gg$X >2,],
aes(X, ymin = 0, ymax = Y), colour="#EAB217", alpha = 0.6) +
scale_x_continuous(breaks = seq(m - 3*s, m + 3*s, s)) +
labs(x = NULL, y = NULL) +
theme(axis.text = element_blank(), axis.ticks.y = element_blank(),
axis.line.y = element_blank()) + geom_hline(yintercept = 0) +
annotate(geom = "text", x = 0, y = -0.02, label = ("null diff. = 0"), size = 3) +
geom_segment(aes(x = 0, y = 0, xend = 0, yend = 0.4), linetype = "dashed") +
annotate(geom = "text", x = 2, y = -0.02, label = "obs diff. = 0.025", size = 3) +
geom_segment(aes(x = 2, y = 0, xend = 2, yend = 0.055), linetype = "dashed") +
annotate(geom = "text", x = 2.3, y = 0.15, label = "p-valor de \n 0.027", size = 3, color = "#EAB217") +
geom_segment(aes(x = 2.3, xend = 2.3, y = 0.11, yend = 0.05),
arrow = arrow(length = unit(0.1, "cm")), color = "#E6205F") +
annotate(geom = "text", x = 0, y = 0.15, label = "0.973", size = 6)
ggplot(data = gg, mapping = aes(x = X, y = Y)) +
geom_path() +
geom_linerange(data = gg[gg$X >2,],
aes(X, ymin = 0, ymax = Y), colour="#EAB217", alpha = 0.6) +
scale_x_continuous(breaks = seq(m - 3*s, m + 3*s, s)) +
labs(x = NULL, y = NULL) +
theme(axis.text = element_blank(), axis.ticks.y = element_blank(),
axis.line.y = element_blank()) + geom_hline(yintercept = 0) +
annotate(geom = "text", x = 0, y = -0.02, label = ("null diff. = 0"), size = 3) +
geom_segment(aes(x = 0, y = 0, xend = 0, yend = 0.4), linetype = "dashed") +
annotate(geom = "text", x = 2, y = -0.02, label = "obs diff. = 0.025", size = 3) +
geom_segment(aes(x = 2, y = 0, xend = 2, yend = 0.055), linetype = "dashed") +
annotate(geom = "text", x = 2.3, y = 0.15, label = "p-valor de \n 0.027", size = 3, color = "#EAB217") +
geom_segment(aes(x = 2.3, xend = 2.3, y = 0.11, yend = 0.05),
arrow = arrow(length = unit(0.1, "cm")), color = "#EAB217") +
annotate(geom = "text", x = 0, y = 0.15, label = "0.973", size = 6)
d <- dados_samp$ativo
xBars <- cumsum(d) / (1:100)
m <- mean(dados$ativo, na.rm = TRUE)
require(plotly)
p <- ggplot(data = data.frame(1:100, xBars), aes(x = X1.100, y = xBars)) +
geom_line_interactive(aes(tooltip = xBars), color = "#E6205F") +
geom_hline(yintercept = m, linetype = "dashed", color = "#E6205F") +
labs(y = "Média de dias fisicamente ativo \n /por semana",
x = "Tamanho da amostra")
ggplotly(p)
p
ggplot(data = data.frame(1:100, xBars), aes(x = X1.100, y = xBars)) +
geom_line_interactive(aes(tooltip = xBars), color = "#E6205F") +
geom_hline(yintercept = m, linetype = "dashed", color = "#E6205F") +
labs(y = "Média de dias fisicamente ativo \n /por semana",
x = "Tamanho da amostra")
require(ggiraph)
p <- ggplot(data = data.frame(1:100, xBars), aes(x = X1.100, y = xBars)) +
geom_line(color = "#E6205F") +
geom_hline(yintercept = m, linetype = "dashed", color = "#E6205F") +
labs(y = "Média de dias fisicamente ativo \n /por semana",
x = "Tamanho da amostra")
ggplotly(p)
bookdown::render_book()
warinings
warinings()
warnings()
